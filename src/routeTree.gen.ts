/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ToolsQrCodeWifiRouteImport } from './routes/tools/qr-code/wifi'
import { Route as ToolsQrCodeSimpleRouteImport } from './routes/tools/qr-code/simple'
import { Route as ToolsNetworkingMcSrvRecordRouteImport } from './routes/tools/networking/mc-srv-record'
import { Route as ToolsNetworkingCidrClashRouteImport } from './routes/tools/networking/cidr-clash'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsQrCodeWifiRoute = ToolsQrCodeWifiRouteImport.update({
  id: '/tools/qr-code/wifi',
  path: '/tools/qr-code/wifi',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsQrCodeSimpleRoute = ToolsQrCodeSimpleRouteImport.update({
  id: '/tools/qr-code/simple',
  path: '/tools/qr-code/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsNetworkingMcSrvRecordRoute =
  ToolsNetworkingMcSrvRecordRouteImport.update({
    id: '/tools/networking/mc-srv-record',
    path: '/tools/networking/mc-srv-record',
    getParentRoute: () => rootRouteImport,
  } as any)
const ToolsNetworkingCidrClashRoute =
  ToolsNetworkingCidrClashRouteImport.update({
    id: '/tools/networking/cidr-clash',
    path: '/tools/networking/cidr-clash',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/tools/networking/cidr-clash': typeof ToolsNetworkingCidrClashRoute
  '/tools/networking/mc-srv-record': typeof ToolsNetworkingMcSrvRecordRoute
  '/tools/qr-code/simple': typeof ToolsQrCodeSimpleRoute
  '/tools/qr-code/wifi': typeof ToolsQrCodeWifiRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/tools/networking/cidr-clash': typeof ToolsNetworkingCidrClashRoute
  '/tools/networking/mc-srv-record': typeof ToolsNetworkingMcSrvRecordRoute
  '/tools/qr-code/simple': typeof ToolsQrCodeSimpleRoute
  '/tools/qr-code/wifi': typeof ToolsQrCodeWifiRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/tools/networking/cidr-clash': typeof ToolsNetworkingCidrClashRoute
  '/tools/networking/mc-srv-record': typeof ToolsNetworkingMcSrvRecordRoute
  '/tools/qr-code/simple': typeof ToolsQrCodeSimpleRoute
  '/tools/qr-code/wifi': typeof ToolsQrCodeWifiRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/tools/networking/cidr-clash'
    | '/tools/networking/mc-srv-record'
    | '/tools/qr-code/simple'
    | '/tools/qr-code/wifi'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/tools/networking/cidr-clash'
    | '/tools/networking/mc-srv-record'
    | '/tools/qr-code/simple'
    | '/tools/qr-code/wifi'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/tools/networking/cidr-clash'
    | '/tools/networking/mc-srv-record'
    | '/tools/qr-code/simple'
    | '/tools/qr-code/wifi'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ToolsNetworkingCidrClashRoute: typeof ToolsNetworkingCidrClashRoute
  ToolsNetworkingMcSrvRecordRoute: typeof ToolsNetworkingMcSrvRecordRoute
  ToolsQrCodeSimpleRoute: typeof ToolsQrCodeSimpleRoute
  ToolsQrCodeWifiRoute: typeof ToolsQrCodeWifiRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/qr-code/wifi': {
      id: '/tools/qr-code/wifi'
      path: '/tools/qr-code/wifi'
      fullPath: '/tools/qr-code/wifi'
      preLoaderRoute: typeof ToolsQrCodeWifiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/qr-code/simple': {
      id: '/tools/qr-code/simple'
      path: '/tools/qr-code/simple'
      fullPath: '/tools/qr-code/simple'
      preLoaderRoute: typeof ToolsQrCodeSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/networking/mc-srv-record': {
      id: '/tools/networking/mc-srv-record'
      path: '/tools/networking/mc-srv-record'
      fullPath: '/tools/networking/mc-srv-record'
      preLoaderRoute: typeof ToolsNetworkingMcSrvRecordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/networking/cidr-clash': {
      id: '/tools/networking/cidr-clash'
      path: '/tools/networking/cidr-clash'
      fullPath: '/tools/networking/cidr-clash'
      preLoaderRoute: typeof ToolsNetworkingCidrClashRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ToolsNetworkingCidrClashRoute: ToolsNetworkingCidrClashRoute,
  ToolsNetworkingMcSrvRecordRoute: ToolsNetworkingMcSrvRecordRoute,
  ToolsQrCodeSimpleRoute: ToolsQrCodeSimpleRoute,
  ToolsQrCodeWifiRoute: ToolsQrCodeWifiRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
